//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Input/Input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Input : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Input()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input"",
    ""maps"": [
        {
            ""name"": ""Ingame"",
            ""id"": ""221e7cf4-67cc-4699-b268-78fa95d8ae85"",
            ""actions"": [
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""751f6799-73c4-42c6-8a68-4a1ffb309ae6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Delete"",
                    ""type"": ""Button"",
                    ""id"": ""eb53b492-acf0-4438-a6a0-670eb8073e29"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pointer"",
                    ""type"": ""PassThrough"",
                    ""id"": ""88501bdf-9085-4f3d-b9ef-3d2634f19335"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotBarScroll"",
                    ""type"": ""Value"",
                    ""id"": ""1b59de61-e30a-4455-ab03-b0e57cdfb3b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HotBarChoose"",
                    ""type"": ""Button"",
                    ""id"": ""ee91d0fd-e926-48ca-bda7-fe9003501200"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StartWave"",
                    ""type"": ""Button"",
                    ""id"": ""ad2c2def-34ce-48e7-9694-785282962b36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""abb8fc36-d419-42fd-b49f-2a6c39818acf"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a782acec-5f25-4898-91dd-6f0e48b69ba3"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pointer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""dfc9299d-9c3f-4a96-ae45-54f0c77f89ad"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotBarScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0dc538d2-d591-434f-aca4-6f36d54e6be8"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotBarScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5f159bd0-57ae-4063-a41d-364a7465861e"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HotBarScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""baec6132-4921-4d0a-87d9-4315c1217272"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartWave"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0035a07-89f9-44ae-91ce-86e5642535ac"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Delete"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dac9fc92-78d3-4071-b5fb-c0e2efdc8237"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""HotBarChoose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29e4233b-7cfa-425b-af56-d53578df034d"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""HotBarChoose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ba35f71-01bd-4bfe-89c3-d289b8f772ca"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=3)"",
                    ""groups"": """",
                    ""action"": ""HotBarChoose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""190829c9-0ef6-4966-8d61-df219c5091c0"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=4)"",
                    ""groups"": """",
                    ""action"": ""HotBarChoose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92739368-31cd-40fb-bbab-066022e171d6"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=5)"",
                    ""groups"": """",
                    ""action"": ""HotBarChoose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9cae5171-6dbd-4d50-9717-a5b59b9f754f"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=6)"",
                    ""groups"": """",
                    ""action"": ""HotBarChoose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8566fb0-1645-4324-bd52-2b89cac51125"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=7)"",
                    ""groups"": """",
                    ""action"": ""HotBarChoose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88343e04-319c-40d8-8dc1-ebe11961f418"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=8)"",
                    ""groups"": """",
                    ""action"": ""HotBarChoose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""159b8a79-f2ef-47d0-96ef-24af321e05fc"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=9)"",
                    ""groups"": """",
                    ""action"": ""HotBarChoose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Ingame
        m_Ingame = asset.FindActionMap("Ingame", throwIfNotFound: true);
        m_Ingame_Interact = m_Ingame.FindAction("Interact", throwIfNotFound: true);
        m_Ingame_Delete = m_Ingame.FindAction("Delete", throwIfNotFound: true);
        m_Ingame_Pointer = m_Ingame.FindAction("Pointer", throwIfNotFound: true);
        m_Ingame_HotBarScroll = m_Ingame.FindAction("HotBarScroll", throwIfNotFound: true);
        m_Ingame_HotBarChoose = m_Ingame.FindAction("HotBarChoose", throwIfNotFound: true);
        m_Ingame_StartWave = m_Ingame.FindAction("StartWave", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Ingame
    private readonly InputActionMap m_Ingame;
    private IIngameActions m_IngameActionsCallbackInterface;
    private readonly InputAction m_Ingame_Interact;
    private readonly InputAction m_Ingame_Delete;
    private readonly InputAction m_Ingame_Pointer;
    private readonly InputAction m_Ingame_HotBarScroll;
    private readonly InputAction m_Ingame_HotBarChoose;
    private readonly InputAction m_Ingame_StartWave;
    public struct IngameActions
    {
        private @Input m_Wrapper;
        public IngameActions(@Input wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interact => m_Wrapper.m_Ingame_Interact;
        public InputAction @Delete => m_Wrapper.m_Ingame_Delete;
        public InputAction @Pointer => m_Wrapper.m_Ingame_Pointer;
        public InputAction @HotBarScroll => m_Wrapper.m_Ingame_HotBarScroll;
        public InputAction @HotBarChoose => m_Wrapper.m_Ingame_HotBarChoose;
        public InputAction @StartWave => m_Wrapper.m_Ingame_StartWave;
        public InputActionMap Get() { return m_Wrapper.m_Ingame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(IngameActions set) { return set.Get(); }
        public void SetCallbacks(IIngameActions instance)
        {
            if (m_Wrapper.m_IngameActionsCallbackInterface != null)
            {
                @Interact.started -= m_Wrapper.m_IngameActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_IngameActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_IngameActionsCallbackInterface.OnInteract;
                @Delete.started -= m_Wrapper.m_IngameActionsCallbackInterface.OnDelete;
                @Delete.performed -= m_Wrapper.m_IngameActionsCallbackInterface.OnDelete;
                @Delete.canceled -= m_Wrapper.m_IngameActionsCallbackInterface.OnDelete;
                @Pointer.started -= m_Wrapper.m_IngameActionsCallbackInterface.OnPointer;
                @Pointer.performed -= m_Wrapper.m_IngameActionsCallbackInterface.OnPointer;
                @Pointer.canceled -= m_Wrapper.m_IngameActionsCallbackInterface.OnPointer;
                @HotBarScroll.started -= m_Wrapper.m_IngameActionsCallbackInterface.OnHotBarScroll;
                @HotBarScroll.performed -= m_Wrapper.m_IngameActionsCallbackInterface.OnHotBarScroll;
                @HotBarScroll.canceled -= m_Wrapper.m_IngameActionsCallbackInterface.OnHotBarScroll;
                @HotBarChoose.started -= m_Wrapper.m_IngameActionsCallbackInterface.OnHotBarChoose;
                @HotBarChoose.performed -= m_Wrapper.m_IngameActionsCallbackInterface.OnHotBarChoose;
                @HotBarChoose.canceled -= m_Wrapper.m_IngameActionsCallbackInterface.OnHotBarChoose;
                @StartWave.started -= m_Wrapper.m_IngameActionsCallbackInterface.OnStartWave;
                @StartWave.performed -= m_Wrapper.m_IngameActionsCallbackInterface.OnStartWave;
                @StartWave.canceled -= m_Wrapper.m_IngameActionsCallbackInterface.OnStartWave;
            }
            m_Wrapper.m_IngameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Delete.started += instance.OnDelete;
                @Delete.performed += instance.OnDelete;
                @Delete.canceled += instance.OnDelete;
                @Pointer.started += instance.OnPointer;
                @Pointer.performed += instance.OnPointer;
                @Pointer.canceled += instance.OnPointer;
                @HotBarScroll.started += instance.OnHotBarScroll;
                @HotBarScroll.performed += instance.OnHotBarScroll;
                @HotBarScroll.canceled += instance.OnHotBarScroll;
                @HotBarChoose.started += instance.OnHotBarChoose;
                @HotBarChoose.performed += instance.OnHotBarChoose;
                @HotBarChoose.canceled += instance.OnHotBarChoose;
                @StartWave.started += instance.OnStartWave;
                @StartWave.performed += instance.OnStartWave;
                @StartWave.canceled += instance.OnStartWave;
            }
        }
    }
    public IngameActions @Ingame => new IngameActions(this);
    public interface IIngameActions
    {
        void OnInteract(InputAction.CallbackContext context);
        void OnDelete(InputAction.CallbackContext context);
        void OnPointer(InputAction.CallbackContext context);
        void OnHotBarScroll(InputAction.CallbackContext context);
        void OnHotBarChoose(InputAction.CallbackContext context);
        void OnStartWave(InputAction.CallbackContext context);
    }
}
